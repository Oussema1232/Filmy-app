{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/logout.js","services/movieService.jsx","services/genreService.jsx","commun/pagination.jsx","utils/paginate.js","utils/filtering.js","commun/listGroup.jsx","commun/likeComponent.jsx","commun/tableHeader.jsx","commun/tableBody.jsx","commun/table.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/NavBar.jsx","components/Rentals.jsx","components/Customers.jsx","commun/input.jsx","commun/select.jsx","commun/form.jsx","components/LoginForm.jsx","services/userService.js","components/Register.jsx","components/movieForm.jsx","components/NotFound.jsx","commun/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","message","axios","interceptors","response","use","status","toast","logging","Promise","reject","get","put","delete","post","setJwt","jwt","defaults","headers","common","email","password","a","http","config","apiUrl","data","localStorage","setItem","getItem","login","loginWithjwt","logout","removeItem","getCurrentUser","token","jwtDecode","err","Logout","auth","window","location","Component","deleteMovie","movieId","getMovie","saveMovie","movie","_id","body","getGenres","Pagination","maxPage","movieNumber","handlepageChange","currentPage","pages","_","ceil","pagesArray","range","className","map","page","key","onClick","movies","slice","selectedGenre","genre","filter","m","Listgroup","genres","onGenreSelect","textProprety","valueProprety","Like","props","filled","liked","style","cursor","likemovie","TableHeader","raiseSort","path","sortColumn","order","onSort","sortIcon","column","columns","this","label","TableBody","getElement","item","content","createKey","Table","MoviesTable","to","title","like","onLike","isAdmin","onDelete","SearchBox","name","onChange","value","forhtml","id","Movies","state","loading","query","deletthemovie","originalMovies","setState","index","indexOf","handleSorting","onchange","input","currentTarget","getPagedData","filteredMovies","allMovies","searchword","toLowerCase","startsWith","filterMovies","count","length","sortedMovies","orderBy","paginate","user","role","color","NavBar","Fragment","Rentals","Customers","Input","rest","Select","options","errors","option","Form","validateProprety","validation","Joi","validate","schema","abortEarly","details","onSubmit","e","preventDefault","dosubmit","renderInput","type","renderButton","disabled","renderSelect","Login","username","string","required","min","from","pathname","createUser","Register","MovieForm","genreId","dailyRentalRate","numberInStock","populateGenres","populateMovies","match","params","maptoViewModel","history","replace","capitalize","toUpperCase","number","max","push","NotFound","ProtectedRoute","component","render","App","height","padding","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2b496037.chunk.js","sourcesContent":["// import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  // Sentry.init({\r\n  //   dsn:\r\n  //     \"https://f7340017b405449da407cd0c8867a857@o383746.ingest.sentry.io/5214109\",\r\n  // });\r\n}\r\n\r\nfunction log(error) {\r\n  // Sentry.captureException(error);\r\n  console.log(error.message);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logging from \"./logService\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    toast.error(\"an unexpected error accured\");\r\n    logging.log(error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  post: axios.post,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst myToken = \"token\";\r\n\r\nhttp.setJwt(localStorage.getItem(myToken));\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(`${config.apiUrl}/auth`, {\r\n    email,\r\n    password,\r\n  });\r\n  localStorage.setItem(myToken, jwt);\r\n}\r\n\r\nexport function loginWithjwt(jwt) {\r\n  localStorage.setItem(myToken, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(myToken);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const token = localStorage.getItem(myToken);\r\n    return jwtDecode(token);\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithjwt,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nexport function getMovies() {\r\n  return http.get(`${config.apiUrl}/movies`);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(`${config.apiUrl}/movies/${movieId}`);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(`${config.apiUrl}/movies/${movieId}`);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(`${config.apiUrl}/movies/${movie._id}`, body);\r\n  }\r\n  return http.post(`${config.apiUrl}/movies`, movie);\r\n}\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nexport function getGenres() {\r\n  return http.get(`${config.apiUrl}/genres`);\r\n}\r\n\r\nexport function getGenre(genreId) {\r\n  return http.get(`${config.apiUrl}/genres/${genreId}`);\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Pagination = ({\r\n  maxPage,\r\n  movieNumber,\r\n  handlepageChange,\r\n  currentPage,\r\n}) => {\r\n  const pages = _.ceil(movieNumber / maxPage) + 1;\r\n  if (pages <= 2) return null;\r\n  const pagesArray = _.range(1, pages);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pagesArray.map((page) => (\r\n          <li\r\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\r\n            key={page}\r\n            onClick={() => handlepageChange(page)}\r\n          >\r\n            <button className=\"page-link\">{page}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  maxPage: propTypes.number.isRequired,\r\n  movieNumber: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  handlepageChange: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","export default function (movies, currentPage, maxPage) {\r\n  let newMovies = movies.slice(\r\n    (currentPage - 1) * maxPage,\r\n    (currentPage - 1) * maxPage + 4\r\n  );\r\n  return newMovies;\r\n}\r\n","export default function (selectedGenre, movies) {\r\n  if (selectedGenre.genre === \"All Genres\") return movies;\r\n  const filteredMovies = movies.filter(\r\n    (m) => m.genre.genre === selectedGenre.genre\r\n  );\r\n  return filteredMovies;\r\n}\r\n","import React from \"react\";\r\n\r\nconst Listgroup = ({\r\n  genres,\r\n  selectedGenre,\r\n  onGenreSelect,\r\n  textProprety = \"genre\",\r\n  valueProprety = \"_id\",\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group-sm \">\r\n      {genres.map((genre) => (\r\n        <li\r\n          key={genre[valueProprety]}\r\n          className={\r\n            selectedGenre === genre\r\n              ? \"list-group-item list-group-item-dark active\"\r\n              : \"list-group-item list-group-item-dark\"\r\n          }\r\n          onClick={() => onGenreSelect(genre)}\r\n        >\r\n          {genre[textProprety]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Listgroup;\r\n","import React from \"react\";\r\n\r\nconst Like = (props) => {\r\n  const filled = props.liked;\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      className={filled ? \"fa fa-heart\" : \"fa fa-heart-o\"}\r\n      onClick={props.likemovie}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n    this.sortIcon(this.props.sortColumn, path);\r\n  };\r\n\r\n  sortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.label || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.sortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  getElement = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.key || column.path);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr  key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.getElement(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TbaleHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { columns, onSort, sortColumn, data } = this.props;\r\n    return (\r\n      <table className=\"table table-primary \">\r\n        <TbaleHeader\r\n          columns={columns}\r\n          onSort={onSort}\r\n          sortColumn={sortColumn}\r\n        />\r\n        <TableBody data={data} columns={columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Like from \"../commun/likeComponent\";\r\nimport Table from \"../commun/table\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      content: (movie) => (\r\n        <NavLink\r\n          to={localStorage.getItem(\"token\") ? `/movies/${movie._id}` : \"/login\"}\r\n        >\r\n          {movie.title}\r\n        </NavLink>\r\n      ),\r\n      label: \"Title\",\r\n    },\r\n    { path: \"genre.genre\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.like} likemovie={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content:\r\n        auth.getCurrentUser() && auth.getCurrentUser().isAdmin\r\n          ? (movie) => (\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => this.props.onDelete(movie._id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            )\r\n          : null,\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        data={movies}\r\n        columns={this.columns}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ name, label, onChange, value }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label forhtml={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        className=\"form-control\"\r\n        id={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"../commun/pagination\";\r\nimport paginate from \"../utils/paginate\";\r\nimport filterMovies from \"../utils/filtering\";\r\nimport Listgroup from \"../commun/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport SearchBox from \"./searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    loading: true,\r\n    maxPage: 4,\r\n    currentPage: 1,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    selectedGenre: { genre: \"All Genres\", _id: 123123123 },\r\n    data: { query: \"\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ genre: \"All Genres\", _id: 123123123 }, ...data];\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres, loading: false });\r\n  }\r\n\r\n  deletthemovie = async (id) => {\r\n    const originalMovies = this.state.movies;\r\n    let movies = originalMovies.filter((m) => m._id !== id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast(\"movie already deleted\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  likemovie = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = this.state.movies.indexOf(movie);\r\n    movies[index].like = !movies[index].like;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlepageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  onGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSorting = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  onchange = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data };\r\n    const value = input.value;\r\n    data[input.name] = value;\r\n    this.setState({ data });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      maxPage,\r\n      currentPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      sortColumn,\r\n    } = this.state;\r\n    const { query } = this.state.data;\r\n    let filteredMovies;\r\n    if (query) {\r\n      const movies = allMovies;\r\n      const searchword = query.toLowerCase();\r\n      filteredMovies = movies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchword)\r\n      );\r\n    } else {\r\n      filteredMovies = filterMovies(selectedGenre, allMovies);\r\n    }\r\n\r\n    const count = filteredMovies.length;\r\n    const sortedMovies = _.orderBy(\r\n      filteredMovies,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const movies = paginate(sortedMovies, currentPage, maxPage);\r\n    return { count, movies };\r\n  };\r\n  render() {\r\n    const {\r\n      maxPage,\r\n      currentPage,\r\n      selectedGenre,\r\n      sortColumn,\r\n      genres,\r\n      loading,\r\n      data,\r\n    } = this.state;\r\n    const { user } = this.props;\r\n    const { count, movies } = this.getPagedData();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <Listgroup\r\n            selectedGenre={selectedGenre}\r\n            onGenreSelect={this.onGenreSelect}\r\n            genres={genres}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {!loading ? (\r\n            <div>\r\n              {user && (\r\n                <Link\r\n                  to={localStorage.getItem(\"token\") ? \"/movies/new\" : \"/login\"}\r\n                >\r\n                  <button className=\"btn btn-info\">Create Movie</button>\r\n                </Link>\r\n              )}\r\n              <SearchBox\r\n                name=\"query\"\r\n                label=\"SearchBox\"\r\n                onChange={this.onchange}\r\n                value={data.query}\r\n              />\r\n              {count > 0 ? (\r\n                <div>\r\n                  {selectedGenre.genre !== \"All Genres\" ? (\r\n                    <h3 style={{ color: \"#eee\" }}>\r\n                      Number of {selectedGenre.genre} movies is {count}\r\n                    </h3>\r\n                  ) : (\r\n                    <h3 style={{ color: \"#eee\" }}>\r\n                      Number of total movies is {count}\r\n                    </h3>\r\n                  )}\r\n\r\n                  <MoviesTable\r\n                    movies={movies}\r\n                    onLike={this.likemovie}\r\n                    onDelete={this.deletthemovie}\r\n                    sortColumn={sortColumn}\r\n                    onSort={this.handleSorting}\r\n                  />\r\n                  <Pagination\r\n                    maxPage={maxPage}\r\n                    movieNumber={count}\r\n                    handlepageChange={this.handlepageChange}\r\n                    currentPage={currentPage}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <h3 style={{ color: \"#eee\" }}>there are no movies </h3>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nfunction NavBar({ user }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Filmy\r\n      </Link>\r\n      <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n        Movies\r\n      </NavLink>\r\n      <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n        Customers\r\n      </NavLink>\r\n      <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n        Rentals\r\n      </NavLink>\r\n\r\n      {user ? (\r\n        <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/\">\r\n            {user.name}\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n            logout\r\n          </NavLink>\r\n        </React.Fragment>\r\n      ) : (\r\n        <React.Fragment>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n            Login\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n            Register\r\n          </NavLink>\r\n        </React.Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label forhtml={name}>{label}</label>\r\n      <input name={name} className=\"form-control\" id={name} {...rest} />\r\n      {error && <div className=\"alert alert-danger\" role=\"alert\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ options, name, label, errors, value, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label forhtml={name}>{label}</label>\r\n      <select\r\n        className=\"form-control\"\r\n        id={name}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n      >\r\n        <option value=\"\"></option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.genre}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {errors && <div className=\"aler alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {}, genres: [] };\r\n\r\n  onchange = ({ currentTarget: input }) => {\r\n    let data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    const errors = this.validateProprety(input.name, input.value);\r\n    this.setState({ data, errors: errors || {} });\r\n  };\r\n\r\n  validation = () => {\r\n    const options = { abortEarly: false };\r\n    const data = this.state.data;\r\n    const { error } = Joi.validate(data, this.schema, options);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    error.details.map((err) => (errors[err.path[0]] = err.message));\r\n    return errors;\r\n  };\r\n\r\n  validateProprety = (name, value) => {\r\n    const schema = { [name]: this.schema[name] };\r\n    const data = { [name]: value };\r\n    const { error } = Joi.validate(data, schema);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    errors[name] = error.details[0].message;\r\n    return errors;\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validation();\r\n    if (errors) this.setState({ errors } || {});\r\n\r\n    this.dosubmit();\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        type={type}\r\n        label={label}\r\n        error={errors[name]}\r\n        value={data[name]}\r\n        onChange={this.onchange}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n        onClick={this.onSubmit}\r\n        disabled={this.validation()}\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label) => {\r\n    const { genres, errors, data } = this.state;\r\n    return (\r\n      <Select\r\n        options={genres}\r\n        name={name}\r\n        label={label}\r\n        errors={errors[name]}\r\n        value={data[name]}\r\n        onChange={this.onchange}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\nimport Form from \"../commun/form\";\r\n\r\nclass Login extends Form {\r\n  state = { data: { username: \"\", password: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    username: Joi.string().required().min(3),\r\n    password: Joi.string().required().min(5),\r\n  };\r\n\r\n  dosubmit = async () => {\r\n    try {\r\n      const { username: email, password } = this.state.data;\r\n      await auth.login(email, password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = err.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form>\r\n        {this.renderInput(\"username\", \"Username\")}\r\n        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n        {this.renderButton(\"Login\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nexport function createUser(email, name, password) {\r\n  return http.post(`${config.apiUrl}/users`, { email, name, password });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\nimport { createUser } from \"../services/userService\";\r\nimport Form from \"../commun/form\";\r\n\r\nclass Register extends Form {\r\n  state = { data: { username: \"\", password: \"\", name: \"\" }, errors: {} };\r\n\r\n  schema = {\r\n    username: Joi.string().email().required().min(3),\r\n    password: Joi.string().required().min(5),\r\n    name: Joi.string().required().min(4),\r\n  };\r\n\r\n  dosubmit = async () => {\r\n    try {\r\n      const { username: email, password, name } = this.state.data;\r\n      const response = await createUser(email, name, password);\r\n      auth.loginWithjwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = err.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <form>\r\n        {this.renderInput(\"username\", \"Username\")}\r\n        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n        {this.renderInput(\"name\", \"Name\")}\r\n        {this.renderButton(\"Register\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"../commun/form\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", dailyRentalRate: \"\", numberInStock: \"\" },\r\n    errors: {},\r\n    genres: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.populateGenres();\r\n    this.populateMovies();\r\n  }\r\n\r\n  populateGenres = async () => {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  };\r\n\r\n  populateMovies = async () => {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      const data = this.maptoViewModel(movie);\r\n      this.setState({ data });\r\n    } catch (err) {\r\n      if (err.response && err.response.status === 404) {\r\n        this.props.history.replace(\"/not-found\");\r\n      }\r\n    }\r\n  };\r\n\r\n  maptoViewModel = (movie) => {\r\n    return {\r\n      title: movie.title,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n      _id: movie._id,\r\n      numberInStock: movie.numberInStock,\r\n      genreId: movie.genre._id,\r\n    };\r\n  };\r\n\r\n  capitalize = () => {\r\n    const data = { ...this.state.data };\r\n    let title = data.title;\r\n    title = title[0].toUpperCase() + title.slice(1);\r\n    data.title = title;\r\n    return data;\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Rate\"),\r\n    numberInStock: Joi.number().required().min(0).max(100).label(\"Stock\"),\r\n  };\r\n\r\n  dosubmit = async () => {\r\n    const data = this.capitalize();\r\n    await saveMovie(data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n  render() {\r\n    return (\r\n      <form>\r\n        {this.renderInput(\"title\", \"Title\")}\r\n        {this.renderSelect(\"genreId\", \"Genres\")}\r\n        {this.renderInput(\"numberInStock\", \"Stock\")}\r\n        {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n        {this.renderButton(\"Save\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>NotFound</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(\"oki\");\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\n\nimport Logout from \"./components/logout\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/NavBar\";\nimport Rentals from \"./components/Rentals\";\nimport Customers from \"./components/Customers\";\nimport Login from \"./components/LoginForm\";\nimport Register from \"./components/Register\";\nimport MovieForm from \"./components/movieForm\";\nimport NotFound from \"./components/NotFound\";\nimport ProtectedRoute from \"./commun/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    return (\n      <div\n        className=\"container-fluid bg-dark\"\n        style={{ height: \"100vh\", padding: 10, color: \"#eee\" }}\n      >\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <Switch>\n          <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n\n          <Route path=\"/rentals\" component={Rentals} />\n          <Route\n            path=\"/movies\"\n            render={(props) => <Movies {...props} user={this.state.user} />}\n          />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}